<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021Python学习笔记</title>
      <link href="/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="print函数"><strong>print函数</strong></h2><h4 id="数字">数字</h4><p>（如520，98.5）输出时不用引号</p><p>如<code>print(520)</code>和<code>print(98.5)</code></p><p>也可以用引号 <code>print(&quot;520&quot;)</code></p><br><h4 id="字符串">字符串</h4><p>必须加引号</p><p>如<code>print(&quot;hello world&quot;)</code></p><br><h4 id="含有运算符的表达式">含有运算符的表达式</h4><p>像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">1+3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></p><p>其中1和3是操作数，加号是运算符，含有两者叫做表达式</p><p>如<code>print(3+1)</code> 那么它就输出4</p><br><h4 id="输出到本地">输出到本地()</h4><p>如<code>open(&quot;E:/日你妈.txt&quot;,&quot;a+&quot;)</code></p><ul><li><p>其中<code>a</code>如果在<code>E:/</code>目录下没有<code>日你妈.txt</code>这个文件就创建一个，</p><p>如果有就在原来基础上追加</p><p>(读写的方式创建文件。没同名文件创建，有的话在文件内容后面追加)</p></li></ul><p>现在我们输入<code>open(&quot;E:/日你妈.txt&quot;,&quot;a+&quot;)</code></p><p>然后把它们存入变量<code>F</code>中</p><p>相当于<code>F=open(&quot;E:/日你妈.txt&quot;,&quot;a+&quot;)</code></p><p>再把内容写入<code>日你妈.txt</code>中</p><p>输入<code>print(&quot;haha&quot;,file=F)</code></p><p>其中file ：文件路径</p><p>最后还可以把这个变量关掉</p><p>输入<code>F.close()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">F = <span class="built_in">open</span>(<span class="string">&quot;E:/日你妈.txt&quot;</span>,<span class="string">&quot;a+&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;haha&quot;</span>,file=F)</span><br><span class="line">F.close()</span><br></pre></td></tr></table></figure><br><h4 id="不换行输出">不换行输出</h4><p>如<code>print(&quot;hello&quot;,&quot;world&quot;,&quot;python&quot;)</code></p><br><h2 id="一些转义字符">一些转义字符</h2><p><code>\n </code>     换行（<code>n</code>指的是newline）</p><p><code>\r</code>       回车</p><p><code>\t  </code>     水平制表符</p><p><code>\b </code>      退格</p><p>其中 \ 是转义功能的首字母</p><p>输入<code>print(&quot;hello\nworld&quot;)</code></p><p>那么它就会输出<br><code>hello</code><br><code>world</code></p><p>输入<code>print(&quot;hello\tworld&quot;)</code></p><p>那么它就会输出</p><p><code>hello    world</code></p><p>就是一组四个空格的位置</p><p>具体了解<a href="https://www.bilibili.com/video/BV1Sw411Z779?p=7&amp;t=159.6">Python教程全套完全入门版转义字符与原字符</a></p><p>输入<code>print(&quot;hello\rworld&quot;)</code></p><p>那么它就会输出</p><p><code>world</code></p><p>直接把hello覆盖掉了</p><br><blockquote><p>在输入<code>print(&quot;https:\\www.baidu.com&quot;)</code>时</p></blockquote><blockquote><p>它会只输出<code>https:\www.baidu.com</code></p><p>这时候要多加一个或两个<u>反斜杠</u></p><p>因为它把第二个反斜杠看成了转义字符首字母，就自动隐藏了</p></blockquote><br><h2 id="原字符"><strong>原字符</strong></h2><p><u>不希望字符串中的转义字符起作用，就使用原字符</u></p><p>假如我们输入<code>print(&quot;hello\nworld&quot;)</code></p><p>那么它就会输出</p><p><code>hello</code></p><p><code>world</code></p><p>那么我们想要让<code>\n</code>不起作用，让它输出<code>hello\nworld</code></p><p>就在<code>&quot;hello\nworld&quot;</code>前加R或r，即<code>print(R&quot;hello\nworld&quot;)</code>或<code>print(r&quot;hello\nworld&quot;)</code></p><ul><li>注意：原字符最后一个字符不能是<u>反斜杠</u><blockquote><p>如<code>print(r&quot;hello\nworld\&quot;)</code></p><p>那么它就会报错了</p><p>要非要输出hello\nworld\的话，</p><p>输入<code>print(r&quot;hello\nworld\&quot;)</code></p><p>也就是在后面加一个空格</p><p>总之就是想办法不要把反斜杠和后面的引号接触在一起</p><p>因为反斜杠会把引号转成<u>原字符</u>造成格式错误</p></blockquote></li></ul><br><h2 id="二进制与字符编码"><strong>二进制与字符编码</strong></h2><p><u>什么叫做二进制和字符编码</u></p><p><a href="https://www.bilibili.com/video/BV1Sw411Z779?p=8&amp;t=42.4">Python教程全套完全入门版二进制与字符编码</a></p><p>一个位置可以写上0或1</p><p>设有a个位置，那就有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>a</mi></msup></mrow><annotation encoding="application/x-tex">2^a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span></span></span>个位置</p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/379f9d9eaab32674b12e2dc0cd08dc3e.png" alt="无标题.png" style="zoom:110%;"><ul><li><p>8个位置（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">2^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>=256）称为1字节（即8bit=1bite）</p></li><li><p>1024bite=1KB(千字节)</p></li><li><p>1024KB=1MB（兆字节）</p></li><li><p>1024MB=1GB（吉字节）</p></li><li><p>1024GB=1TB(太字节)</p><br><p><u>各种字符编码</u></p><p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/a0e6c63540f1466725becd0d849e68b3.png" alt="截图"></p></li></ul><br><h4 id="chr函数">chr函数</h4><p><code>乘</code>十六进制是4e58，那么它的二进制是<code>0100111001011000</code></p><ol><li>输入<code>print(chr())</code></li><li>再把<code>0100111001011000</code>丢进去，即<code>print(chr(0100111001011000))</code><blockquote><p>但发现它会报错，因为它是二进制，而<u>它默认的是十进制</u></p><p>这时候再在<code>0100111001011000</code>前输入个0b</p><p>即<code>print(chr(0b0100111001011000))</code></p><p>它就会输出<code>乘</code></p></blockquote></li></ol><br><h4 id="ord函数">ord函数</h4><ol><li>输入<code>print(ord(”“))</code></li><li>再把<code>乘</code>丢进去，即<code>print(ord(&quot;乘&quot;))</code>，那么它就会输出<code>20056</code><blockquote><p><code>20056</code>是十进制，它默认的是十进制</p></blockquote></li></ol><br><ul><li>注意：chr函数括号内<u>不用加引号</u>，ord函括号内<u>要加引号</u></li><li>不管是几进制，转到计算机中都是二进制，因为计算机只识别二进制</li><li>chr函数不仅能搞二进制，还能搞八进制等各种进制，如<code>print(chr(20056))</code></li></ul><br><h2 id="保留字">保留字</h2><p>在Python中<u>不可以给对象命名</u>的单词，</p><p>如你在给新的Python文件命名时或设置变量时不可以使用</p><h4 id="怎么查询保留字">怎么查询保留字</h4><p>输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line"><span class="built_in">print</span>(keyword.kwlist)</span><br></pre></td></tr></table></figure><p>那么它就会输出所有的保留字</p><br><h4 id="标识符"><strong>标识符</strong></h4><p>在<u>给对象起的名字</u>叫做标识符</p><p><u>规则如下</u></p><ul><li>你可以使用字母、数字、下划线</li><li>不能以数字开头</li><li>不能是保留字</li><li>我是严格区分大小写的</li></ul><br><h2 id="变量"><strong>变量</strong></h2><p>变量是内存中一个<u>带标签的盒子</u></p><p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4a8d7ba6255458e24b9e80588b6f2df4.png" alt="截图"></p><p>把<code>马丽亚</code>放进变量里</p><p>输入<code>name=&quot;马丽亚&quot;</code></p><p>其中name即变量名（标识符），可在标识符原则下随便取</p><p><code>&quot;马丽亚&quot;</code>是字符串</p><p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/0ca45b24d3caef8b5efc2b9f40f68c17.png" alt="截图"></p><br><h4 id="变量的定义和使用">变量的定义和使用</h4><p>变量由<u>标识、类型和值</u>三部分组成</p><ul><li><p>标识：表示对象<u>所存储的内存地址</u>，使用内置函数<code>id(obj)</code>来获取</p></li><li><p>类型：表示的是对象的<u>数据类型</u>，使用内置函数<code>type(obj)</code>来获取</p></li><li><p>值：表示对象<u>所存储的具体数据</u>（即刚才的<code>马丽亚</code>）, 使用<code>print(obj)</code>可以将值进行打印输出</p><br></li></ul><h4 id="如何获取标识、类型和值">如何获取标识、类型和值</h4><p>先了解一点</p><ul><li><code>id</code>是标识</li><li><code>type</code>是类型</li><li>值的话就直接输出变量，即<code>print（name）</code>，输入<code>print(value(name))</code>会报错</li></ul><p>先将<code>马丽亚</code>存入<code>name</code>中，输入<code>name=&quot;马丽亚&quot;</code></p><p>输入<code>print(id(name))</code></p><p>输出的就是这个变量在内存中的地址</p><p>输入<code>print(type(name))</code></p><p>输出的就是这个变量的数据类型，即<code>&lt;class 'str'&gt;</code>，那么这个变量数据类型是<code>str</code></p><p>输入<code>print(name)</code></p><p>输出的就是这个变量中的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;马丽亚&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(name))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><br><h4 id="变量的多次赋值"><strong>变量的多次赋值</strong></h4><p>当我们输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;马丽亚&quot;</span></span><br><span class="line">name=<span class="string">&quot;楚溜冰&quot;</span></span><br></pre></td></tr></table></figure><p>时</p><p>再输入<code>print(name)</code> 它就会输出<code>楚溜冰</code></p><p>那<code>马丽亚</code>就不会被使用，将会被视为内存垃圾，</p><p>Python的垃圾回收机制会对这个垃圾进行一个回收</p><p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8ff0e394fb9cec25bfa1d85ececdfc74.png" alt="截图"></p><br><h2 id="常见的数据类型"><strong>常见的数据类型</strong></h2><ul><li>int     整数类型         如98（不带小数点和引号的）</li><li>float  浮点数类型       如3.14159、9.8、5.6、33.9</li><li>bool  布尔类型    只能取两个值，这两个值就是<code>true</code>或者<code>false</code>，用来表示<u>真</u>或者<u>假</u></li><li>str     字符串类型      只要加上引号的就称为字符串类型，如&quot;hello world&quot;</li></ul><br><h4 id="整数类型（integer，简写为int）">整数类型（integer，简写为int）</h4><p>英文为integer, 简写为int, 可以表示<u>正数、负数和零</u>，但<u>绝对不能有小数点和引号</u></p><blockquote><p>整数的不同进制表示方式</p><ul><li>十进制→默认的进制</li><li>二进制→以<code>0b</code>开头</li><li>八进制→以<code>0o</code>开头</li><li>十六进制→<code>0x</code>开头</li></ul><p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/aad19126b424eee043564f5d4b26b5da.png" alt="截图"></p></blockquote><ol><li>把随意一些整数类型存入变量当中，如输入<code>n1=98</code> <code>n2=56</code> <code>n3=22</code>（设置多个变量）</li><li>输入<code>print(type(n1),type(n2),type(n3))</code>，输出的都是int，即整数类型</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n1=<span class="number">98</span></span><br><span class="line">n2=<span class="number">56</span></span><br><span class="line">n3=<span class="number">22</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(n1),<span class="built_in">type</span>(n2),<span class="built_in">type</span>(n3))</span><br></pre></td></tr></table></figure><p>将<u>二进制、十进制、八进制、十六进制</u>转换成<u>十进制</u></p><p>输入<code>print(118)</code>（十进制）</p><p>那么它就会输出<code>118</code>（十进制）</p><p>输入<code>print(0b1010110)</code>（二进制）</p><p>那么它就输出<code>86</code>（十进制）</p><p>输入<code>print(0o55555)</code>（八进制）</p><p>那么它就会输出<code>23405</code>（十进制）</p><p>输入<code>print(0x4e58)</code>（十六进制）</p><p>那么它就会输出<code>20056</code>（十进制）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">118</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">0b1010110</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">0o55555</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">0x4e58</span>)</span><br></pre></td></tr></table></figure><br><h4 id="浮点数类型">浮点数类型</h4><p>包括<u>整数和小数</u>部分，如3.141596535、33.56、2.33</p><blockquote><p>输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">3.14</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure><p>时</p><p>它输出的是<code>&lt;class 'float'&gt;</code>，即浮点数类型</p></blockquote><ul><li><p>浮点数存储<u>不精确性</u></p><p>使用浮点数进行计算时，可能会出现<u>小数位数不确定</u>的情况</p></li></ul><p>正常状态下我们输入<code>print(1.1+1.1)</code></p><p>那么它就会输出<code>2.2</code></p><p>那当我们输入<code>print(1.1+2.2)</code>时，理论上是<code>3.3</code></p><p>但它输出<code>3.3000000000000003</code></p><p>这说明<u>个别</u>浮点数不能精确存储</p><p><u>任何语言中浮点数都不能精确存储</u></p><blockquote><p>解决方案</p><p>导入模块<u>decimal</u>再去计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line"><span class="built_in">print</span>(Decimal(<span class="string">&quot;1.1&quot;</span>)+Decimal(<span class="string">&quot;2.2&quot;</span>))</span><br></pre></td></tr></table></figure><p>结果输出的就是<code>3.3</code></p></blockquote><br><h4 id="布尔类型（bool，全称Boolean）">布尔类型（bool，全称Boolean）</h4><p>用来表示<u>真或假</u>的值</p><p>True 表示真，False 表示假</p><ul><li>True表示整数1</li><li>False表示整数0</li></ul><p>输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b=<span class="literal">True</span></span><br><span class="line">c=<span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b),<span class="built_in">type</span>(c))</span><br></pre></td></tr></table></figure><p>它就会输出<code>&lt;class 'bool'&gt; &lt;class 'bool'&gt;</code>，即布尔类型</p><blockquote><p>转成整数计算</p><p>如输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="literal">True</span>+<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="literal">False</span>+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>那么它就会输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>就相当于把<code>True</code>和<code>False</code>分别当成1和2看</p></blockquote><br><h4 id="字符串类型">字符串类型</h4><ul><li>字符串又被称为<u>不可变的字符序列</u></li><li>可以使用<u>单引号、双引号或三引号</u>来定义</li><li>单引号和双引号定义的字符串<u>必须在一行</u></li><li>三引号定义的字符串可以<u>分布在连续的多行</u></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#单引号</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"><span class="comment">#双引号</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"><span class="comment">#三引号</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;&quot;hello</span></span><br><span class="line"><span class="string">world&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>其中三引号像这样输入那么它输出的就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line">world</span><br></pre></td></tr></table></figure><ul><li><p>三引号有两种召唤方式</p><p>按三下双引号，即<code>&quot;&quot;&quot;&quot;&quot;&quot;</code></p><p>按三下单引号，即<code>''''''</code></p><p>例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输入</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;&quot;hello</span></span><br><span class="line"><span class="string">world&quot;&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;&#x27;hello</span></span><br><span class="line"><span class="string">world&#x27;&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输出</span></span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">hello</span><br><span class="line">world</span><br></pre></td></tr></table></figure></li></ul><br><h4 id="数据类型转换"><strong>数据类型转换</strong></h4><ul><li><p>为什么需要数据类型转换？</p><p>将不同数据类型的数据拼接在一起</p></li></ul><p>举个例子</p><p>我想让它输出<code>我叫 楚溜冰 我今年 20 岁了</code></p><p>直接输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;楚溜冰&quot;</span></span><br><span class="line">age=<span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name),<span class="built_in">type</span>(age))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我叫&quot;</span>,name,<span class="string">&quot;我今年&quot;</span>,age,<span class="string">&quot;岁了&quot;</span>)</span><br></pre></td></tr></table></figure><p>还有一种方法，通过加号（连接符）连接（把逗号换成了加号）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;楚溜冰&quot;</span></span><br><span class="line">age=<span class="number">20</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name),<span class="built_in">type</span>(age))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我叫&quot;</span>+name+<span class="string">&quot;我今年&quot;</span>+age+<span class="string">&quot;岁了&quot;</span>)</span><br></pre></td></tr></table></figure><p>但是它会报错（TypeError: can only concatenate str (not “int”) to str）</p><p>意思是str和int格式不能连接在一起（name和age）</p><ul><li><p><u>解决方案</u>如下</p><p>将int类型通过<code>str()</code>转换成str类型</p><p><code>print(&quot;我叫&quot;+name+&quot;我今年&quot;+str(age)+&quot;岁了&quot;)</code></p><p>也就是在<code>age</code>前加个<code>str</code>，再用括号括起来</p><p>输出的内容为<code>我叫楚溜冰我今年20岁了</code></p></li></ul><p>用连接符和用逗号的区别是前者没有空格，后者有空格</p><br><h4 id="数据类型转换函数">数据类型转换函数</h4><p><code>str()</code>将其它数据类型转换成str，即字符串</p><p><code>int()</code>将其它数据类型转换成int，即整数</p><p><code>float()</code>将其它数据类型转换成float，即浮点数</p><p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/f035d0f603f2414512801d9f5ddb44cc.png" alt="截图"></p><br><h2 id="计算">计算</h2><p>➕       加法</p><p>➖       减法</p><p>✳       乘法</p><p>/           除法</p><p>**         幂运算（例如2✳✳3=2的3次方=2✖2✖2=8）</p><p>%         1.取余     （一正一负要公式），例如9%4=1</p><p>2.余数=被除数-除数*商，例如9%(-4)=-3       9-(-4)✳(-3)=-3</p><p>//         整除（例如9➗4=2.25，那么9整除4就是2，抹掉了小数点和小数后面的数）</p><p>整除：一正一负往下取整。例如9➗-4得出来是-2.25，整除后是-3，如下图</p><p><img src="/LPaniblogtext/LPaniblogtext/2022/02/06/2021Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/f67c1cdf6adcbe3411f604bd4733aa0c.png" alt="无标题.png"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 计算机 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站过程中的公告：更换butterfly主题</title>
      <link href="/LPaniblogtext/2022/02/04/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E5%85%AC%E5%91%8A%EF%BC%9A%E6%9B%B4%E6%8D%A2butterfly%E4%B8%BB%E9%A2%98/"/>
      <url>/LPaniblogtext/2022/02/04/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E5%85%AC%E5%91%8A%EF%BC%9A%E6%9B%B4%E6%8D%A2butterfly%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>emmmmm尴尬了，在上个月还在说要上线了。</p><p>在最后上传过程中觉得主题缺点意思，就换了</p><ol><li><p>我的博客网址：</p><p><a href="http://lpani.cf/LPaniblogtext/">http://lpani.cf/LPaniblogtext/</a> 测试版</p><p><a href="lpani.cf">lpani.cf</a> 正式版1</p><p><a href="cn-lpani.gitub.io">cn-lpani.github.io</a> 正式版2</p><p>目前上线的只有测试版，正式版只有临时上传的PYthon学习笔记</p></li><li><p>从这篇文章起停止使用<span id="more"></span>断行（因为新主题不需要断行</p></li><li><p>测试版很多地方没有完善</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站部署公告</title>
      <link href="/LPaniblogtext/2022/01/30/%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2%E5%85%AC%E5%91%8A/"/>
      <url>/LPaniblogtext/2022/01/30/%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2%E5%85%AC%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p>2022.1.29<br>前两天入门PS，现在重回正轨，完善各种设置，看了了<a href="https://www.cnblogs.com/songsongblue/p/10910907.html">这篇文章</a>  终于知道怎么截取长篇文章了（就是下面的阅读全文）</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于网站最后部署阶段报告</title>
      <link href="/LPaniblogtext/2022/01/27/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E6%9C%80%E5%90%8E%E9%83%A8%E7%BD%B2%E9%98%B6%E6%AE%B5%E6%8A%A5%E5%91%8A/"/>
      <url>/LPaniblogtext/2022/01/27/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E6%9C%80%E5%90%8E%E9%83%A8%E7%BD%B2%E9%98%B6%E6%AE%B5%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h1>部署公告</h1><p>我正在做最后的部署工作，包括对主题的图标等各种元素的修改，这是个复杂的过程，设计图标时要用到PS，还要去找背景图等等，尽量在这个寒假内上线这个网站</p>]]></content>
      
      
      <categories>
          
          <category> 公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，2022</title>
      <link href="/LPaniblogtext/2022/01/26/%E4%BD%A0%E5%A5%BD%EF%BC%8C2022%EF%BC%8C%E6%9C%9B%E5%89%8D%E7%A8%8B%E4%BC%BC%E9%94%A6/"/>
      <url>/LPaniblogtext/2022/01/26/%E4%BD%A0%E5%A5%BD%EF%BC%8C2022%EF%BC%8C%E6%9C%9B%E5%89%8D%E7%A8%8B%E4%BC%BC%E9%94%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天（2022.1.26），这个网站正式诞生了！</p><p>下面一些时间段可以帮助你了解该<a href="CN-LPani.github.io">网站</a>创建过程</p><span id="more"></span><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h4 id="2021-2-18"><a href="#2021-2-18" class="headerlink" title="2021.2.18"></a>2021.2.18</h4><p>下载过GitHub For Windows，GitHub For Windows自动给我GitHub建了一个库（人生第一个库）</p><p>以前非常关注GitHub，因为那时候我对数据可视化特别感兴趣，GitHub上又有好多大佬的可视化工具，安装那个GitHub for Windows只是玩玩，结果全是英文（太可怜了</p><h4 id="2021总体"><a href="#2021总体" class="headerlink" title="2021总体"></a>2021总体</h4><p>其实我很早就想要做一个网站了（在2021就想了），看着很多up主都有自己的个人网站，b站主页也天天给我推建站的教程（其实只是自己这类视频看得多了</p><p>再加上其它各种因素的压迫，建站已经迫在眉睫</p><p>一开始，每周放假都去德鸡那申请一个免费的服务器，没通过？再来！</p><p>每次申请只能用一个邮箱，一旦申请失败下次申请就不能用这个邮箱（反正我用虚拟邮箱</p><p>从开始到放弃，申请了无数个账号没一个给我过的</p><p>后来我又去试了三丰云、阿巴主机（应该跑路了）、甲骨文等免费服务器分发，</p><p>因为太麻烦（又要手机号、身份证、外币信用卡），所以都放弃了</p><p>年底看了<a href="https://space.bilibili.com/12890453?from=search&seid=16282885945424705122&spm_id_from=333.337.0.0">鱼皮</a> 的建站视频，知道了许多关于不要自己购买服务器建站的方法（有内网穿透的、有代码托管的）</p><h4 id="2022-1-1-创建了我第一个GitHub仓库"><a href="#2022-1-1-创建了我第一个GitHub仓库" class="headerlink" title="2022.1.1 创建了我第一个GitHub仓库"></a>2022.1.1 创建了我第一个GitHub仓库</h4><p>这天，我把我的python学习笔记转换成html放到GitHub Pages上去，</p><p>生成网址，向世界发布（即使没人知道</p><p>原网址为<a href="cn-lpani.github.io/PersonalWebsite">cn-lpani.github.io/PersonalWebsite</a><br><br>现在不能上了,因为我把这个库的名字改成了username.github.io,并且这个库里面的东西被我换了</p><h5 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h5><ul><li>无意间想起以前看过<a href="https://space.bilibili.com/179757857?from=search&seid=7881889910837577266&spm_id_from=333.337.0.0"><strong>GTX690战术核显卡导弹</strong></a> 的<a href="https://www.bilibili.com/video/BV1LQ4y1T7Xh?spm_id_from=333.999.0.0">制作网站的视频</a> ，主要介绍了如何用GitHub Pages建站（其实就是托管代码）</li><li>然后按照教程安装了以前删除的GitHub for Windows，配置好一切后，网站就能上了</li><li>网站最初是基于Markdown编辑的，只有一些字、图片和符号</li></ul><h4 id="2022-1-2-完善了一下网站"><a href="#2022-1-2-完善了一下网站" class="headerlink" title="2022.1.2 完善了一下网站"></a>2022.1.2 完善了一下网站</h4><h4 id="2022-1-14-尝试word-press"><a href="#2022-1-14-尝试word-press" class="headerlink" title="2022.1.14 尝试word press"></a>2022.1.14 尝试word press</h4><h5 id="具体过程-1"><a href="#具体过程-1" class="headerlink" title="具体过程"></a>具体过程</h5><ul><li>现在的网站太单调了，根据经验，我去搞了一个wordpress</li><li>结果搞了半天网站都进不去，最后发现word press没有index.html!!!!!焯！！！</li></ul><h4 id="2022-1-15-接触hexo"><a href="#2022-1-15-接触hexo" class="headerlink" title="2022.1.15 接触hexo"></a>2022.1.15 接触hexo</h4><p>刚开始看到是这个<a href="https://www.bilibili.com/video/BV1cW411A7Jx?p=5">教程</a></p><p>后来开始建设hexo博客，攻破了各种技术难题，坚持不懈，呕心沥血，最后遇到了hexo d无法上传到GitHub和把库的名字更改为xxxxxx.github.io无法访问的问题，一直没有解决，网站建设陷入了僵局。</p><p>自从把原来的库改为xxxxx.github.io一直没法访问，就创建了好多个库研究（创了又删创了又删）</p><p>由于时间关系，网站建设工程不得不停下</p><h4 id="2022-1-25"><a href="#2022-1-25" class="headerlink" title="2022.1.25"></a>2022.1.25</h4><p>经过了十天的塊勒补习，老子又回来了啊啊啊啊啊啊啊</p><p>这天晚上解决了hexo d 无法上传的问题，多亏这篇<a href="https://blog.csdn.net/qq_38415505/article/details/83687207">教程</a></p><p>然后就可以上GitHub的仓库看到自己的博客文件</p><h4 id="2022-1-26-（不要阅读啊啊啊啊啊啊啊啊啊啊啊"><a href="#2022-1-26-（不要阅读啊啊啊啊啊啊啊啊啊啊啊" class="headerlink" title="2022.1.26 （不要阅读啊啊啊啊啊啊啊啊啊啊啊"></a>2022.1.26 （不要阅读啊啊啊啊啊啊啊啊啊啊啊</h4><p>解决了xxxxxx.github.io无法访问的问题，原来是网络有问题，把steam++的github.io关掉就行了</p><p>从早上10：00继续开始建站工作，含辛茹苦，把自己搞得头胀脑昏的，主题布置上去了静态页面却生成不了，配置文件改错了但已经改不回来了，每次hexo s进去只能看到Cannot GET/,问了交流群的大佬，最直接的办法是重装…….</p><p>昨晚hexo d成功上传GitHub仓库换来的喜悦，转眼化为乌有</p><p>过去，我总是重复着的动作，安装，配置，报错，重装，千篇一律，每天花着巨多时间建设网站,但都被困难阻挡。我问过自己为什么要出来整这些东西，为了……逃避极度内卷的学习..回避一塌糊涂的生活？</p><p>面对社会，有的蛮横无理，有的不近道理，有的颠倒是非，我们悲愤填膺，有时只能付之一叹，背对现实。天色逐渐昏暗下来，一天的序幕徐徐落下，眼里的最后昏暗光线随之吞噬。我们没法改变生活，只能接受。我要的是，跳出这个卷要命的圈子，去做自己喜欢做的事情，开发自己的能力，打造自己的世界</p><br><br><br><p>（扯远了，不好意思！！！后来自己重装一遍换了个更好的主题）</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>emmm没什么好说的</p>]]></content>
      
      
      <categories>
          
          <category> 公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/LPaniblogtext/2022/01/26/hello-world/"/>
      <url>/LPaniblogtext/2022/01/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start-2">Quick Start</h2><h3 id="Create-a-new-post-2">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server-2">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files-2">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites-2">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
